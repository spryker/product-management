[
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Communication/Form/BundledProductForm.php",
        "description": "Method `Spryker\\Zed\\ProductManagement\\Communication\\Form\\BundledProductForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Communication/Form/Product/AttributeAbstractForm.php",
        "description": "Method `Spryker\\Zed\\ProductManagement\\Communication\\Form\\Product\\AttributeAbstractForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Communication/Form/Product/AttributeSuperForm.php",
        "description": "Method `Spryker\\Zed\\ProductManagement\\Communication\\Form\\Product\\AttributeSuperForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Communication/Form/Product/ImageCollectionForm.php",
        "description": "Method `Spryker\\Zed\\ProductManagement\\Communication\\Form\\Product\\ImageCollectionForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Communication/Form/Product/ImageSetForm.php",
        "description": "Method `Spryker\\Zed\\ProductManagement\\Communication\\Form\\Product\\ImageSetForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Communication/ProductManagementCommunicationFactory.php",
        "description": "Factories: The method `Spryker\\Zed\\ProductManagement\\Communication\\ProductManagementCommunicationFactory::getProductTaxCollection()()` contains a `foreach` statement which violates rule \"Factory methods should not contain loops.\"",
        "rule": "FactoryNoLoopsRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToCurrencyBridge.php",
        "description": "Bridges: Method `getCurrent()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToCurrencyBridge.php",
        "description": "Bridges: Method `getAllStoresWithCurrencies()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToCurrencyBridge.php",
        "description": "Bridges: Method `getDefaultCurrencyForCurrentStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Method `getCurrentLocale()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Type should be defined for param `localeName` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToLocaleBridge::getLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Method `getLocale()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Type should be defined for param `localeName` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToLocaleBridge::hasLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Method `getLocaleCollection()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Type should be defined for param `idLocale` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToLocaleBridge::getLocaleById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleBridge.php",
        "description": "Bridges: Method `getLocaleById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getLocale()`. Got `$localeName` but expected to be `string $localeName`. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `hasLocale()`. Got `$localeName` but expected to be `string $localeName`. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToLocaleInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getLocaleById()`. Got `$idLocale` but expected to be `int $idLocale`. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `value` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToMoneyBridge::convertDecimalToInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `value` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToMoneyBridge::convertIntegerToDecimal()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `amount` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToMoneyBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `isoCode` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToMoneyBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceBridge.php",
        "description": "Bridges: Method `getNetPriceModeIdentifier()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceBridge.php",
        "description": "Bridges: Method `getGrossPriceModeIdentifier()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceBridge.php",
        "description": "Bridges: Method `getDefaultPriceMode()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceProductBridge.php",
        "description": "Bridges: Method `getPriceTypeValues()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceProductBridge.php",
        "description": "Bridges: Method `getDefaultPriceTypeName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceProductBridge.php",
        "description": "Bridges: Method `findProductConcretePrices()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceProductBridge.php",
        "description": "Bridges: Method `getPriceModeIdentifierForBothType()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceProductBridge.php",
        "description": "Bridges: Method `findProductAbstractPricesWithoutPriceExtraction()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToPriceProductBridge.php",
        "description": "Bridges: Method `findProductConcretePricesWithoutPriceExtraction()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductAttributeBridge.php",
        "description": "Bridges: Method `createProductManagementAttribute()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductAttributeBridge.php",
        "description": "Bridges: Method `updateProductManagementAttribute()` must have `public function update<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductAttributeBridge.php",
        "description": "Bridges: Method `getProductAttributeCollection()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductAttributeBridge.php",
        "description": "Bridges: Method `getUniqueSuperAttributesFromConcreteProducts()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductAttributeBridge.php",
        "description": "Bridges: Method `getProductManagementAttributes()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `key` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::hasProductAttributeKey()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `key` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::findProductAttributeKey()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `findProductAttributeKey()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `createProductAttributeKey()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `updateProductAttributeKey()` must have `public function update<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::hasProductAbstract()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::hasProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `addProduct()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `saveProduct()` must have `public function [update|create]<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::findProductAbstractById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `findProductAbstractById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProduct` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::findProductConcreteById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `findProductConcreteById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::getConcreteProductsByAbstractProductId()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `getConcreteProductsByAbstractProductId()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProductConcrete` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::activateProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProductConcrete` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::deactivateProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `getCombinedAbstractAttributeKeys()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `getCombinedConcreteAttributes()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::touchProductAbstract()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `idProductConcrete` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::touchProductConcrete()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductBridge::findProductConcreteIdBySku()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `findProductConcreteIdBySku()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBridge.php",
        "description": "Bridges: Method `getProductAbstractLocalizedAttributeNamesIndexedByIdProductAbstract()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductBundleBridge.php",
        "description": "Bridges: Method `saveBundledProducts()` must have `public function [update|create]<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductCategoryBridge.php",
        "description": "Bridges: Method `getCategoryTransferCollectionByIdProductAbstract()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductImageBridge.php",
        "description": "Bridges: Method `saveProductImage()` must have `public function [update|create]<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductImageBridge.php",
        "description": "Bridges: Method `saveProductImageSet()` must have `public function [update|create]<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductImageBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductImageBridge::getProductImagesSetCollectionByProductAbstractId()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductImageBridge.php",
        "description": "Bridges: Method `getProductImagesSetCollectionByProductAbstractId()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductImageBridge.php",
        "description": "Bridges: Type should be defined for param `idProduct` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToProductImageBridge::getProductImagesSetCollectionByProductId()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToProductImageBridge.php",
        "description": "Bridges: Method `getProductImagesSetCollectionByProductId()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToStockBridge.php",
        "description": "Bridges: Method `getWarehouseToStoreMapping()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToStoreFacadeBridge.php",
        "description": "Bridges: Method `getCurrentStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTaxBridge.php",
        "description": "Bridges: Method `getTaxRates()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTaxBridge.php",
        "description": "Bridges: Method `getTaxSets()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTaxBridge.php",
        "description": "Bridges: Type should be defined for param `idTaxSet` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToTaxBridge::getTaxSet()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTaxBridge.php",
        "description": "Bridges: Method `getTaxSet()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTouchBridge.php",
        "description": "Bridges: Type should be defined for param `itemType` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToTouchBridge::touchActive()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTouchBridge.php",
        "description": "Bridges: Type should be defined for param `idItem` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToTouchBridge::touchActive()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTouchBridge.php",
        "description": "Bridges: Type should be defined for param `itemType` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToTouchBridge::touchDeleted()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToTouchBridge.php",
        "description": "Bridges: Type should be defined for param `idItem` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Facade\\ProductManagementToTouchBridge::touchDeleted()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `value` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::encodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `options` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::encodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `depth` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::encodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `jsonValue` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `assoc` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `depth` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Service/ProductManagementToUtilEncodingBridge.php",
        "description": "Bridges: Type should be defined for param `options` in method `Spryker\\Zed\\ProductManagement\\Dependency\\Service\\ProductManagementToUtilEncodingBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToStoreFacadeBridge.php",
        "description": "Bridges: Method `getAllStores()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductManagement/Dependency/Facade/ProductManagementToStoreFacadeInterface.php",
        "description": "Bridges: Method `getAllStores()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
